
---
title: "Mature/nascent ratios"
date: "2024-5-23" 
date-modified: last-modified
---

```{r, include = FALSE}
knitr::opts_chunk$set(
    collapse = TRUE,
    warning = FALSE,
    message = FALSE
)
```


```{r }
#| code-fold: true
#| code-summary: "Setup"
suppressPackageStartupMessages({
    library(tidyseurat)
    library(Seurat)
    library(targets)
    library(ggplot2)
    library(ggdist)
    library(ggsignif)
    library(ggpubr)
})

tar_config_set(store = "/scratch/domeally/DCD.tienhoven_scRNAseq.2024/_targets")
tar_source("/scratch/domeally/DCD.tienhoven_scRNAseq.2024/R")
cpus <- hprcc::slurm_allocation()$CPUs

tar_load(seurat_object_annotated_full)
seurat_object <- load_seurat(seurat_object_annotated_full)

seurat_object <- seurat_object |>
    dplyr::filter(diabetes_status == "NODM")

spliced_ratio_genes <- c("spliced_ratio_INS", "spliced_ratio_XBP1", "spliced_ratio_GAPDH")
```

::: {.panel-tabset}

## Beta cells

::: {.panel-tabset}

## Per cell

```{r }
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Boxplots of nascent/mature gene expression, indicating median values per cell. Non-expressing cells are excluded."

beta <- seurat_object |> dplyr::filter(cell_type == "Beta")
expression <- beta %>%
    dplyr::mutate(protected = factor(protected)) %>%
    dplyr::select(protected, all_of(spliced_ratio_genes)) |>
    rename_with(~ gsub("spliced_ratio_", "", .x)) |>
    pivot_longer(
        cols = -protected,
        names_to = "gene",
        values_to = "expression"
    ) |>
    dplyr::filter(expression > 0)

ggplot(expression, aes(x = protected, y = expression, fill = protected, col = protected)) +
    stat_slab(alpha = 0.2) +
    stat_dots(position = "dodgejust") +
    stat_pointinterval(col = "black", alpha = 0.6) +
    facet_wrap(~gene, scales = "free_y") +
    geom_signif(
        test = "wilcox.test",
        comparisons = list(c("TRUE", "FALSE")),
        map_signif_level = TRUE,
        margin_top = -0.4,
        tip_length = 0,
        extend_line = -0.35,
        color = "black"
    ) +
    stat_summary(
        fun = median,
        geom = "label",
        aes(label = sprintf("%.2f", after_stat(y)), alpha = 0.4),
        color = "white",
        hjust = 1.1,
        vjust = 1.1
    ) +
    theme_classic() +
    NoLegend() +
    labs(
        title = "Ratio of Mature/Nascent, per cell",
        x = "Protected Status",
        y = "Percent of mature transcripts"
    ) +
    scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red")) +
    scale_color_manual(values = c("TRUE" = "blue", "FALSE" = "red"))
```

## Per donor

```{r }
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Boxplots of spliced gene expression, indicating median values per cell. Non-expressing cells are excluded."

# Prepare the data
expression <- beta %>%
    dplyr::mutate(protected = factor(protected)) %>%
    dplyr::select(orig.ident, protected, all_of(spliced_ratio_genes)) %>%
    rename_with(~ gsub("spliced_ratio_", "", .x)) %>%
    pivot_longer(
        cols = -c(orig.ident, protected),
        names_to = "gene",
        values_to = "expression"
    ) %>%
    dplyr::filter(expression > 0) %>%
    group_by(orig.ident, protected, gene) %>%
    summarize(mean_expression = mean(expression), .groups = "drop")


# Create the plot
ggplot(expression, aes(x = protected, y = mean_expression, fill = protected, color = protected)) +
    stat_slab(alpha = 0.2) +
    stat_dots(position = "dodgejust") +
    stat_pointinterval(color = "black", alpha = 0.6) +
    facet_wrap(~gene, scales = "free_y") +
    geom_signif(
        test = "wilcox.test",
        comparisons = list(c("TRUE", "FALSE")),
        map_signif_level = TRUE,
        margin_top = -0.4,
        tip_length = 0,
        extend_line = -0.35,
        color = "black"
    ) +
    stat_summary(
        fun = median,
        geom = "label",
        aes(label = sprintf("%.2f", after_stat(y)), alpha = 0.4),
        color = "white",
        hjust = 1.1,
        vjust = 1.1
    ) +
    theme_classic() +
    NoLegend() +
    labs(
        title = "Ratio of Mature/nascent, per donor",
        x = "Protected Status",
        y = "Percent of mature transcripts"
    ) +
    scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red")) +
    scale_color_manual(values = c("TRUE" = "blue", "FALSE" = "red"))
```

::::

## Alpha cells

::: {.panel-tabset}

## Per cell

```{r }
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Boxplots of nascent/mature gene expression, indicating median values per cell. Non-expressing cells are excluded."

alpha <- seurat_object |> dplyr::filter(cell_type == "Alpha")
expression <- alpha %>%
    dplyr::mutate(protected = factor(protected)) %>%
    dplyr::select(protected, all_of(spliced_ratio_genes)) |>
    rename_with(~ gsub("spliced_ratio_", "", .x)) |>
    pivot_longer(
        cols = -protected,
        names_to = "gene",
        values_to = "expression"
    ) |>
    dplyr::filter(expression > 0)

ggplot(expression, aes(x = protected, y = expression, fill = protected, col = protected)) +
    stat_slab(alpha = 0.2) +
    stat_dots(position = "dodgejust") +
    stat_pointinterval(col = "black", alpha = 0.6) +
    facet_wrap(~gene, scales = "free_y") +
    geom_signif(
        test = "wilcox.test",
        comparisons = list(c("TRUE", "FALSE")),
        map_signif_level = TRUE,
        margin_top = -0.4,
        tip_length = 0,
        extend_line = -0.35,
        color = "black"
    ) +
    stat_summary(
        fun = median,
        geom = "label",
        aes(label = sprintf("%.2f", after_stat(y)), alpha = 0.4),
        color = "white",
        hjust = 1.1,
        vjust = 1.1
    ) +
    theme_classic() +
    NoLegend() +
    labs(
        title = "Ratio of Mature/Nascent, per cell",
        x = "Protected Status",
        y = "Percent of mature transcripts"
    ) +
    scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red")) +
    scale_color_manual(values = c("TRUE" = "blue", "FALSE" = "red"))
```

## Per donor

```{r }
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Boxplots of spliced gene expression, indicating median values per cell. Non-expressing cells are excluded."

# Prepare the data
expression <- alpha %>%
    dplyr::mutate(protected = factor(protected)) %>%
    dplyr::select(orig.ident, protected, all_of(spliced_ratio_genes)) %>%
    rename_with(~ gsub("spliced_ratio_", "", .x)) %>%
    pivot_longer(
        cols = -c(orig.ident, protected),
        names_to = "gene",
        values_to = "expression"
    ) %>%
    dplyr::filter(expression > 0) %>%
    group_by(orig.ident, protected, gene) %>%
    summarize(mean_expression = mean(expression), .groups = "drop")


# Create the plot
ggplot(expression, aes(x = protected, y = mean_expression, fill = protected, color = protected)) +
    stat_slab(alpha = 0.2) +
    stat_dots(position = "dodgejust") +
    stat_pointinterval(color = "black", alpha = 0.6) +
    facet_wrap(~gene, scales = "free_y") +
    geom_signif(
        test = "wilcox.test",
        comparisons = list(c("TRUE", "FALSE")),
        map_signif_level = TRUE,
        margin_top = -0.4,
        tip_length = 0,
        extend_line = -0.35,
        color = "black"
    ) +
    stat_summary(
        fun = median,
        geom = "label",
        aes(label = sprintf("%.2f", after_stat(y)), alpha = 0.4),
        color = "white",
        hjust = 1.1,
        vjust = 1.1
    ) +
    theme_classic() +
    NoLegend() +
    labs(
        title = "Ratio of Mature/nascent, per donor",
        x = "Protected Status",
        y = "Percent of mature transcripts"
    ) +
    scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red")) +
    scale_color_manual(values = c("TRUE" = "blue", "FALSE" = "red"))
```

::::

## All cell types

::: {.panel-tabset}

## Per cell

```{r }
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Boxplots of nascent/mature gene expression, indicating median values per cell. Non-expressing cells are excluded."

spliced_ratio_genes <- c("spliced_ratio_INS", "spliced_ratio_XBP1", "spliced_ratio_GAPDH")
expression <- seurat_object %>%
    dplyr::mutate(protected = factor(protected)) %>%
    dplyr::select(protected, all_of(spliced_ratio_genes)) |>
    rename_with(~ gsub("spliced_ratio_", "", .x)) |>
    pivot_longer(
        cols = -protected,
        names_to = "gene",
        values_to = "expression"
    ) |>
    dplyr::filter(expression > 0)

ggplot(expression, aes(x = protected, y = expression, fill = protected, col = protected)) +
    stat_slab(alpha = 0.2) +
    stat_dots(position = "dodgejust") +
    stat_pointinterval(col = "black", alpha = 0.6) +
    facet_wrap(~gene, scales = "free_y") +
    geom_signif(
        test = "wilcox.test",
        comparisons = list(c("TRUE", "FALSE")),
        map_signif_level = TRUE,
        margin_top = -0.4,
        tip_length = 0,
        extend_line = -0.35,
        color = "black"
    ) +
    stat_summary(
        fun = median,
        geom = "label",
        aes(label = sprintf("%.2f", after_stat(y)), alpha = 0.4),
        color = "white",
        hjust = 1.1,
        vjust = 1.1
    ) +
    theme_classic() +
    NoLegend() +
    labs(
        title = "Ratio of Mature/Nascent, per cell",
        x = "Protected Status",
        y = "Percent of mature transcripts"
    ) +
    scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red")) +
    scale_color_manual(values = c("TRUE" = "blue", "FALSE" = "red"))
```

## Per donor

```{r }
#| fig-width: 10
#| fig-height: 10
#| fig-cap: "Boxplots of spliced gene expression, indicating median values per cell. Non-expressing cells are excluded."

# Prepare the data
expression <- seurat_object %>%
    dplyr::mutate(protected = factor(protected)) %>%
    dplyr::select(orig.ident, protected, all_of(spliced_ratio_genes)) %>%
    rename_with(~ gsub("spliced_ratio_", "", .x)) %>%
    pivot_longer(
        cols = -c(orig.ident, protected),
        names_to = "gene",
        values_to = "expression"
    ) %>%
    dplyr::filter(expression > 0) %>%
    group_by(orig.ident, protected, gene) %>%
    summarize(mean_expression = mean(expression), .groups = "drop")


# Create the plot
ggplot(expression, aes(x = protected, y = mean_expression, fill = protected, color = protected)) +
    stat_slab(alpha = 0.2) +
    stat_dots(position = "dodgejust") +
    stat_pointinterval(color = "black", alpha = 0.6) +
    facet_wrap(~gene, scales = "free_y") +
    geom_signif(
        test = "wilcox.test",
        comparisons = list(c("TRUE", "FALSE")),
        map_signif_level = TRUE,
        margin_top = -0.4,
        tip_length = 0,
        extend_line = -0.35,
        color = "black"
    ) +
    stat_summary(
        fun = median,
        geom = "label",
        aes(label = sprintf("%.2f", after_stat(y)), alpha = 0.4),
        color = "white",
        hjust = 1.1,
        vjust = 1.1
    ) +
    theme_classic() +
    NoLegend() +
    labs(
        title = "Ratio of Mature/nascent, per donor",
        x = "Protected Status",
        y = "Percent of mature transcripts"
    ) +
    scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red")) +
    scale_color_manual(values = c("TRUE" = "blue", "FALSE" = "red"))
```

::::

::::