
---
title: "HPAP scRNAseq Data Analysis rs3842752"
subtitle: "Cell bucket list"
author: 
- name: "Denis O'Meally"
  email: domeally@coh.org
  orcid: 0000-0001-7749-9506
institute: "Department of Diabetes & Cancer Discovery Science, <br/> Arthur Riggs Diabetes & Metabolism Research Institute, City of Hope"
date: "2024-3-25" 
date-modified: last-modified
format:
  html:
    embed-resources: true
    theme: simplex
    code-fold: true
---

```{r, include = FALSE}
knitr::opts_chunk$set(
    collapse = TRUE,
    warning = FALSE,
    message = FALSE
)
```

## Setup

```{r }
#| code-fold: true
#| code-summary: "Show the code"
#| cache: false
suppressPackageStartupMessages({
library(tidyverse)
library(targets)
library(ggplot2)
library(Seurat)
library(patchwork)
library(scCustomize)
})

tar_config_set(store = "/home/domeally/workspaces/DCD.tienhoven_scRNAseq.2024/_targets")
tar_source("/home/domeally/workspaces/DCD.tienhoven_scRNAseq.2024/R")

tar_load(c(protected_cohort, pancdb_metadata))
# all_samples_seurat_object <- glue::glue("{analysis_cache}/data/merged_seurat_bp_sketch_integrated_20240327.qs") |> load_seurat()
# sample_metadata <- pancdb_metadata |>
#     dplyr::mutate(protected = donor_id %in% protected_cohort$sample_id, batch = as.integer(as.factor(reagent_kit))) |>
#     dplyr::filter(str_detect(reagent_kit, "10X") & !str_detect(donor_id, failed_qc_donor_ids)) |>
#     select(c(donor_id, diabetes_status ,protected, batch, sample_sex, sample_age))
# meta_data<-select(sample_metadata, -c(protected, batch, sample_sex, sample_age))
# all_samples_seurat_object <- Add_Sample_Meta(seurat_object = all_samples_seurat_object, meta_data = meta_data, join_by_seurat = "orig.ident",
#     join_by_meta = "donor_id")
# #--- NODM ----
# Idents(all_samples_seurat_object) <- "diabetes_status"
# seurat_object <- subset(all_samples_seurat_object, idents = "NODM") |> JoinLayers()
# qs::qsave(seurat_object,  glue::glue("{analysis_cache}/data/NODM_seurat_object.qs"))
seurat_object <-  glue::glue("{analysis_cache}/data/NODM_seurat_object.qs") |> load_seurat()
```

# 1. Nascent INS mRNA is similar in beta-cells of S/P vs. S/S islet donors

*Confirmed!* This disproves the prevailing hypothesis that VNTR polymorphism in the promoter region of the INS gene explains genetic allele specific expression and protection from T1D (Pugliese; Polychronakos Nat Genet 1997)

::: {.callout-warning appearance="simple"}

## Not Quite!

Kallisto analysis still underway...

Yet to calculate the ratio of nascent INS/XBP1 mRNA to total INS mRNA in beta-cells of S/P vs. S/S islet donors.

:::

### INS mRNA is similar in beta-cells of S/P vs. S/S islet donors

```{r }
library(ggpubr)

Beta_cells <- subset(seurat_object, subset = tosti_cell_type == "Beta")

data <- FetchData(Beta_cells, vars = c("INS", "protected"))

ggplot(data, aes(x = as.factor(protected), y = INS, fill = as.factor(protected))) +
  geom_jitter(width = 0.2, alpha = 0.1, size = 0.1) +
  geom_boxplot() +
  labs(x = "Protected", y = "Expression of INS", title = "INS Expression in Beta Cells") +
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_manual(values = c("TRUE" = "red", "FALSE" = "grey"),
                    labels = c("TRUE" = "S/P", "FALSE" = "S/S")) +
  theme(legend.position = "none") +
  stat_compare_means(aes(group = protected), method = "wilcox.test", label = "p.signif", label.x.npc = "center", label.y.npc = "top")
```

Note the "leaky" expression of INS:

```{r }
FeaturePlot(seurat_object, features = "INS") +theme(axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank())
DimPlot(seurat_object, group.by = "tosti_cell_type", label = TRUE, cols = custom_palette) + NoLegend() + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank())
```

Cell types after [Tosti et al. (2020)](https://www.gastrojournal.org/article/S0016-5085(20)35399-3/fulltext)

```{r}
Idents(seurat_object) <- "tosti_cell_type"

VlnPlot_scCustom(seurat_object, features = "INS", split.by = "protected", raster = FALSE) +
    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
    labs(title = "Expression of INS in S/P vs. S/S islet donors") +
    scale_fill_manual(
                    values = c(`TRUE` = "red", `FALSE` = "grey"),
                    labels = c(`TRUE` = "S/P", `FALSE` = "S/S"))
```

This is consistent with published data (CellXGene) showing INS expression in cells other than beta-cells:

::: {layout-ncol=2}

![Cell type](assets/cellXgene_annot.png)

![INS expression](assets/cellXgene_INS.png)

:::

Cell type annotation has a significant impact on the interpretation of INS expression:

```{r}
#| fig-cap: "Tosti et al cell types"
scCustomize::Stacked_VlnPlot(seurat_object, features = cell_type_markers, x_lab_rotate = TRUE, colors_use = custom_palette, group.by = "tosti_cell_type") & labs(title = "Tosti et al 2021")
```
```{r}
#| fig-cap: "HuBMAP cell types"
scCustomize::Stacked_VlnPlot(seurat_object, features = cell_type_markers, x_lab_rotate = TRUE, colors_use = custom_palette, group.by = "azimuth_label") & labs(title = "HuBMAP")
```

# 2. Spliced INS mRNA is decreased in S/P vs. S/S beta-cells 

Yes: Great; No: Check in islets with XBPs (XBPs is the prototypic product of XBP digested by IRE1a activated because of ER stress; i.o.w., XBPs marks an ER-stressed (beta-)cell)

Yes: Great; No: check within single beta-cells of S/P with stress (XBPs) vs. unstressed (only XBP) whether P chromosome product has less than S chromosome product; 

Yes: Great; compare with spliced INS mRNA of stressed beta cells of S/P donors with those of S/S donors. Yes: Super; No? no worries. 

# 3. Markers of ER stress are up-regulated in islets of S/S donors compared to S/P donors

a. Check for candidate genes: we expect genes like IRE1 (ERN1), ATF6, XBP1, PERK (EIF2AK3), BIP (HSPA5), CHOP (DDIT3), PSMB10 and INS to be lower expressed in beta cells with the protective SNP. 

::: {.callout-note}

Here we are looking at global trends: plotting expression of the ER stress genes-of-interest in beta-cells of S/P vs. S/S donors, *per cell*. No multiple testing correction is applied, nor grouping by donor.

:::

```{r}
data <- FetchData(Beta_cells, vars = c("protected", er_genes_of_interest))
data_long <- pivot_longer(data, cols = all_of(er_genes_of_interest), names_to = "Gene", values_to = "Expression")
# Plot
ggplot(data_long, aes(x = as.factor(protected), y = Expression, fill = as.factor(protected))) +
  geom_jitter(width = 0.2, alpha = 0.1, size = 0.1) +
  geom_boxplot(alpha = 0.5) +
  labs(x = "Protected", y = "Expression", title = "ER Stress Gene Expression in Beta Cells") +
  facet_wrap(~Gene, scales = "free_y") + # Separate plot for each gene
  theme_classic() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_fill_manual(values = c("TRUE" = "red", "FALSE" = "grey"),
                    labels = c("TRUE" = "S/P", "FALSE" = "S/S")) +
  theme(legend.position = "none") +
  stat_compare_means(aes(group = protected), method = "wilcox.test", p.adjust.method = "BH", label = "p.signif", label.x.npc = "center", label.y.npc = "center") +
  stat_summary(fun = mean, geom = "point", shape = 16, size = 3, color = "black", fill = "blue") + # Add mean dots
  stat_summary(aes(label = sprintf("%.2f", ..y..)), fun = mean, geom = "text", vjust = -1.5, hjust = 1.5, size = 4, colour = "blue") # Add labels for means

```

b. Check for altered genes (volcano plot) of S/S vs. S/P beta-cells

::: {.callout-note}

Here we formally test for differential expression, with BH multiple testing correction, pseudo-bulked by cell type and donor.

:::

```{r }
library(ggrepel)

# pseudo_bulk <- AggregateExpression(seurat_object, return.seurat = TRUE, slot = "counts", assays = "RNA", group.by = c("tosti_cell_type", "orig.ident", "protected"))
# qs::qsave(pseudo_bulk, "/scratch/domeally/DCD.tienhoven_scRNAseq.2024/data/pseudo_bulk.qs")
pseudo_bulk <- "/scratch/domeally/DCD.tienhoven_scRNAseq.2024/data/pseudo_bulk.qs" |> load_seurat()
Idents(pseudo_bulk) <- "protected"
de_markers <- FindMarkers(pseudo_bulk, ident.1 = "TRUE", ident.2 = "FALSE", slot = "counts", test.use = "wilcox", verbose = TRUE)
de_markers$gene <- rownames(de_markers)

# Assuming 'de_markers' is prepared with 'gene' column as rownames
ggplot(de_markers, aes(x = avg_log2FC, y = -log10(p_val))) +
  geom_point(size = 0.5, alpha = 0.5) +  # Adjust point size and opacity for better visualization
  theme_bw(base_size = 14) +  # Use theme_bw with a base font size for better readability
  labs(
    x = "Average Log2 Fold Change",
    y = "-log10(Unadjusted p-value)",
    title = "Beta-cell Differential Expression",
    subtitle = "Comparison of S/S v S/P"
  ) +
  geom_text_repel(
    aes(label = ifelse(p_val_adj < 0.1, gene, "")),  # Label significant genes based on adjusted p-value
    size = 3.5,  # Slightly larger text size for readability
    box.padding = 0.35,  # Adjust padding around text to avoid overlap
    point.padding = 0.5,  # Adjust distance from points to text
    min.segment.length = 0.1,  # Minimize the segment length for a cleaner look
    color = "blue",  # Change text color to blue for better visibility against the background
    nudge_x = 0.05,  # Nudge text a bit to the right for clearer separation from points
    nudge_y = 0.05,  # Nudge text up a bit for vertical separation
    direction = "y"  # Optimize text placement primarily in the vertical direction
  ) +
  theme(
    plot.title = element_text(face = "bold"),  # Bold title for emphasis
    plot.subtitle = element_text(face = "italic"),  # Italic subtitle for stylistic differentiation
    axis.title.x = element_text(vjust = -0.2),  # Adjust x-axis title position for closer proximity to axis
    axis.title.y = element_text(vjust = 1.5),  # Adjust y-axis title position for optimal spacing
    legend.position = "none"  # Hide legend (not applicable here but good practice for cleaner plots)
  )

```

```{r}
library(gt)
de_markers_sorted <- de_markers %>%
  arrange(p_val, desc(abs(avg_log2FC))) |>
 select(gene, everything()) |> head(n = 20)

de_markers_sorted %>%
  gt() %>%
  tab_header(
    title = "Top 20 Differential Expression Markers",
    subtitle = "Sorted by p-value and absolute logFC"
  ) %>%
  cols_label(
    p_val = "P-value",
    avg_log2FC = "Average Log2 Fold Change",
    pct.1 = "Percent detected Protected",
    pct.2 = "Percent detected Susceptable",
    p_val_adj = "Adjusted P-value",
    gene = "Gene"
  ) %>%
  fmt_number(
    columns = c("p_val", "avg_log2FC", "p_val_adj"),
    decimals = 4
  ) %>%
  fmt_percent(
    columns = c("pct.1", "pct.2"),
    decimals = 2
  ) %>%
  tab_options(
    table.width = pct(100),
    data_row.padding = px(5)
  ) %>%
  cols_align(
    align = "center",
    columns = everything()
  )

```

c. Check for affected pathways: Cellular responses to stress, Unfolded Protein Response (UPR), Class I MHC mediated antigen processing & presentation, Insulin processing, Cellular Senescence, Regulation of insulin secretion (from reactome.org)?

::: {.callout-note}

No pathway with significant enrichment was found in the current analysis.
:::

```{r }
#| eval: false
require(clusterProfiler)
require(enrichplot)
clusterProfiler::GSEA(de_markers, TERM2GENE = cell_types, scoreType = "pos")
    enriched_plot <- if (nrow(enriched_cell_types@result) == 0) grid::textGrob('No enriched cell types found') else barplot(enriched_cell_types, showCategory=10) 

```

```{r }
#| eval: false
# rejoin the layers in the sketched assay this is required to perform differential expression
        joined_seurat_object<-seurat_object
        joined_seurat_object[["sketch"]] <- JoinLayers(seurat_object[["sketch"]])
        Idents(joined_seurat_object) <- "tosti_cell_type"
        beta_markers <- FindMarkers(object = joined_seurat_object, ident.1 = "Beta")
        beta_markers|>filter(p_val_adj < 0.05)|>head(30)
        beta_markers_protected<-FindMarkers(joined_seurat_object, ident.1 = "TRUE", group.by = 'protected', subset.ident = "Beta")
```

# 4. Bonus: Beta-cells are more stressed than alpha cells

a. Pathway enrichment analysis to see which pathways are upregulated or downregulated in S/S vs. S/P per islet cell-type-cluster. 

b. In the UMAP, please overlay differentially expressed ER stress genes to see whether beta cells have more stress-related transcripts than for example alpha cells and acinar cells.

```{r }
#| fig-cap: "Tosti et al cell types"
#| column: margin
DimPlot(seurat_object, group.by = "tosti_cell_type", label = TRUE, cols = custom_palette) + NoLegend() + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank())
```

```{r }
#| fig-width: 10
#| fig-height: 30
#| column: page
FeaturePlot(seurat_object, features = er_genes_of_interest, split.by = "protected", keep.scale = "feature") + theme(axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks = element_blank())
```

# 5. Extra Bonus: T1D islets are more stressed than T2D islets and non-diabetic islets

Yes: Done! No: Check beta-cells only. No? Take a Guinness. Yes: Take a few more; apply for CSO position.

```{r }
#| eval: false
Beta_cells <- subset(seurat_object, subset = tosti_cell_type == "Beta")
# Fetch data
data <- FetchData(Beta_cells, vars = c("INS", "protected", "diabetes_status"))

```


::: {.callout-note appearance="simple"}

## Data published in Nature Metabolism

Single-cell expression profiling of islets generated by the Human Pancreas Analysis Program [Nature Metabolism, 2022 5:713-715](https://www.nature.com/articles/s42255-022-00531-x)

Single-cell multi-omics analysis of human pancreatic islets reveals novel cellular states in type 1 diabetes [Nature Metabolism, 2022 4:284:299](https://www.nature.com/articles/s42255-022-00531-x)

- HPAP-019 was enriched for B-cells

[CellXGene](https://cellxgene.cziscience.com/e/37b21763-7f0f-41ae-9001-60bad6e2841d.cxg/)

Could also use an [alternate reference](https://ega-archive.org/studies/EGAS000010046)

**We have not considered AAB+ donors separately**

:::